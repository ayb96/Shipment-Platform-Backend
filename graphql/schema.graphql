"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Mutation{
 login(
        email: String!
        password: String!
      ): String @field(resolver: "AuthMutator@resolve")
    createUser(
        name: String!
        email: String!
        password: String!
    ): CreateUserPayload! @field(resolver:"UserMutator@create") 
    updateUser(id: ID!, name:String,email: String, password:String): User @update @guard
    deleteUser(id: ID!): User @delete @guard

    createShipment(
        address: String!
        waybill: String!
        name: String!
        phone: String!
        user_id: Int!
    ): CreatShipmentPayload! @field(resolver:"ShipmentMutator@create") @guard
    updateShipment(id: ID!,address:String ,waybill: String, name: String, phone:String): Shipment @update @guard
    deleteShipment(id: ID!): Shipment @delete @guard
}

type CreateUserPayload{
    user: User
}
type CreatShipmentPayload{
    shipment: Shipment
}



type Query {
    users: [User!]! @all
    shipments: [Shipment!]! @all 
    user(id: ID! @eq): User @find
    shipment(id: ID! @eq): Shipment @find
}


type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    shipments:[Shipment!]! @hasMany(type:"paginator")
}
type Shipment {
    id: ID!
    address: String!
    waybill: String!
    name: String!
    phone: String!
    user: User! @belongsTo
}
